apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "souvenirs.fullname" . }}-api
  labels:
    {{- include "souvenirs.labels" . | nindent 4 }}
    component: api
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "souvenirs.selectorLabels" . | nindent 6 }}
      component: api
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "souvenirs.selectorLabels" . | nindent 8 }}
        component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "souvenirs.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      initContainers:
        - name: update-permissions
          image: busybox:1.35.0
          command: ["/bin/sh", "-c", "mkdir -p /workspace/files/data && chown -R 1000:1000 /workspace/files/data"]
          securityContext:
            runAsUser: 0
            privileged: true
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name : data
              mountPath : /workspace/files
          {{- end }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.api.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: api
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: api
          {{- if semverCompare ">=1.16-0" .Capabilities.KubeVersion.GitVersion }}
          startupProbe:
            httpGet:
              path: /actuator/health
              port: api
            failureThreshold: 30
          {{- end }}
          env:
            - name: PORT
              value: "{{ .Values.api.port }}"
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: org.postgresql.Driver
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.name }}"
            {{- if .Values.db.existingSecret }}
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.existingSecret.name }}
                  key: {{ .Values.db.existingSecret.usernameKey }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.existingSecret.name }}
                  key: {{ .Values.db.existingSecret.passwordKey }}
            {{- else if .Values.postgresql.enabled }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgresql.auth.username }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.postgresql.auth.password }}
            {{- end }}
            {{- range .Values.api.secretsEnv }}
              {{- $secretName := .secretName }}
              {{- range $key, $value :=  .env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $value }}
              {{- end }}
            {{- end }}
            {{- range $key, $value := .Values.api.env }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name : data
              mountPath : /workspace/files
          {{- end }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "souvenirs.fullname" .) }}-data
      {{- end -}}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
